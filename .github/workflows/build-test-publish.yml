# https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: build-test-release

on:
  push:
  #release:
  #  types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        pip install build
        ./prepare.sh
        ./release.sh

    - uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: |
          dist/*.whl
          tests/*

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: wheel
    - name: Install
      run: |
        ls -la
        pip install pytest
        pip install dist/*.whl
    - name: Test
      run: |
        python -m ksykaitai
        python tests/test.py

    - name: Debug Tag Branch
      run: |
        echo "github.ref: ${{ github.ref }}"
        echo "github.base_ref: ${{ github.base_ref }}"
        echo "github.head_ref: ${{ github.head_ref }}"
        echo "github.event: ${{ github.event }}"
        echo "github.event_name: ${{ github.event_name }}"
        echo "github.event.base_ref: ${{ github.event.base_ref }}"
        echo "--- ${{ github.ref }} + ${{ github.event.base_ref }}"
        echo "--- ${{ startsWith(github.ref, 'refs/tags/') }}"
        echo "--- ${{ github.event.base_ref == 'refs/heads/ksykaitai' }}"
        echo "--- ${{ startsWith(github.ref, 'refs/tags/') && github.event.base_ref == 'refs/heads/ksykaitai' }}"
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      run: echo "$GITHUB_CONTEXT"

  publish:
    # publish only on tags to `ksykaitai` branch (default), for details see
    # https://github.com/yakshaveinc/linux/pull/44#issuecomment-817077246
    if: ${{ startsWith(github.ref, 'refs/tags/') && github.event.base_ref == 'refs/heads/ksykaitai' }}

    needs: test
    runs-on: ubuntu-latest
    steps:
    - run: echo "Deploying from tag on `ksykaitai` branch"
    - uses: actions/download-artifact@v2
      with:
        name: wheel
    - name: Publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: |
        twine upload dist/*
